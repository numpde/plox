# autogenerated with param_make.py

class rcParam:
	class _internal:
		classic_mode = '_internal.classic_mode' # False
	class Agg:
		class Path:
			chunksize = 'agg.path.chunksize' # 0
	class Animation:
		avconv_args = 'animation.avconv_args' # []
		avconv_path = 'animation.avconv_path' # 'avconv'
		bitrate = 'animation.bitrate' # -1
		codec = 'animation.codec' # 'h264'
		convert_args = 'animation.convert_args' # []
		convert_path = 'animation.convert_path' # 'convert'
		embed_limit = 'animation.embed_limit' # 20.0
		ffmpeg_args = 'animation.ffmpeg_args' # []
		ffmpeg_path = 'animation.ffmpeg_path' # 'ffmpeg'
		frame_format = 'animation.frame_format' # 'png'
		html = 'animation.html' # 'none'
		html_args = 'animation.html_args' # []
		writer = 'animation.writer' # 'ffmpeg'
	class Axes:
		autolimit_mode = 'axes.autolimit_mode' # 'data'
		axisbelow = 'axes.axisbelow' # 'line'
		edgecolor = 'axes.edgecolor' # 'black'
		facecolor = 'axes.facecolor' # 'white'
		class Formatter:
			limits = 'axes.formatter.limits' # [-5, 6]
			min_exponent = 'axes.formatter.min_exponent' # 0
			offset_threshold = 'axes.formatter.offset_threshold' # 4
			use_locale = 'axes.formatter.use_locale' # False
			use_mathtext = 'axes.formatter.use_mathtext' # False
			useoffset = 'axes.formatter.useoffset' # True
		grid = 'axes.grid' # False
		class Grid:
			axis = 'axes.grid.axis' # 'both'
			which = 'axes.grid.which' # 'major'
		labelcolor = 'axes.labelcolor' # 'black'
		labelpad = 'axes.labelpad' # 4.0
		labelsize = 'axes.labelsize' # 'medium'
		labelweight = 'axes.labelweight' # 'normal'
		linewidth = 'axes.linewidth' # 0.8
		prop_cycle = 'axes.prop_cycle' # cycler('color', ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf'])
		class Spines:
			bottom = 'axes.spines.bottom' # True
			left = 'axes.spines.left' # True
			right = 'axes.spines.right' # True
			top = 'axes.spines.top' # True
		titlecolor = 'axes.titlecolor' # 'auto'
		titlelocation = 'axes.titlelocation' # 'center'
		titlepad = 'axes.titlepad' # 6.0
		titlesize = 'axes.titlesize' # 'large'
		titleweight = 'axes.titleweight' # 'normal'
		unicode_minus = 'axes.unicode_minus' # True
		xmargin = 'axes.xmargin' # 0.05
		ymargin = 'axes.ymargin' # 0.05
	class Axes3d:
		grid = 'axes3d.grid' # True
	backend = 'backend' # 'TkAgg'
	backend_fallback = 'backend_fallback' # True
	class Boxplot:
		bootstrap = 'boxplot.bootstrap' # None
		class Boxprops:
			color = 'boxplot.boxprops.color' # 'black'
			linestyle = 'boxplot.boxprops.linestyle' # '-'
			linewidth = 'boxplot.boxprops.linewidth' # 1.0
		class Capprops:
			color = 'boxplot.capprops.color' # 'black'
			linestyle = 'boxplot.capprops.linestyle' # '-'
			linewidth = 'boxplot.capprops.linewidth' # 1.0
		class Flierprops:
			color = 'boxplot.flierprops.color' # 'black'
			linestyle = 'boxplot.flierprops.linestyle' # 'none'
			linewidth = 'boxplot.flierprops.linewidth' # 1.0
			marker = 'boxplot.flierprops.marker' # 'o'
			markeredgecolor = 'boxplot.flierprops.markeredgecolor' # 'black'
			markeredgewidth = 'boxplot.flierprops.markeredgewidth' # 1.0
			markerfacecolor = 'boxplot.flierprops.markerfacecolor' # 'none'
			markersize = 'boxplot.flierprops.markersize' # 6.0
		meanline = 'boxplot.meanline' # False
		class Meanprops:
			color = 'boxplot.meanprops.color' # 'C2'
			linestyle = 'boxplot.meanprops.linestyle' # '--'
			linewidth = 'boxplot.meanprops.linewidth' # 1.0
			marker = 'boxplot.meanprops.marker' # '^'
			markeredgecolor = 'boxplot.meanprops.markeredgecolor' # 'C2'
			markerfacecolor = 'boxplot.meanprops.markerfacecolor' # 'C2'
			markersize = 'boxplot.meanprops.markersize' # 6.0
		class Medianprops:
			color = 'boxplot.medianprops.color' # 'C1'
			linestyle = 'boxplot.medianprops.linestyle' # '-'
			linewidth = 'boxplot.medianprops.linewidth' # 1.0
		notch = 'boxplot.notch' # False
		patchartist = 'boxplot.patchartist' # False
		showbox = 'boxplot.showbox' # True
		showcaps = 'boxplot.showcaps' # True
		showfliers = 'boxplot.showfliers' # True
		showmeans = 'boxplot.showmeans' # False
		vertical = 'boxplot.vertical' # True
		class Whiskerprops:
			color = 'boxplot.whiskerprops.color' # 'black'
			linestyle = 'boxplot.whiskerprops.linestyle' # '-'
			linewidth = 'boxplot.whiskerprops.linewidth' # 1.0
		whiskers = 'boxplot.whiskers' # 1.5
	class Contour:
		corner_mask = 'contour.corner_mask' # True
		negative_linestyle = 'contour.negative_linestyle' # 'dashed'
	datapath = 'datapath' # '/home/ra/repos/plox/venv/lib/python3.8/site-packages/matplotlib/mpl-data'
	class Date:
		class Autoformatter:
			day = 'date.autoformatter.day' # '%Y-%m-%d'
			hour = 'date.autoformatter.hour' # '%m-%d %H'
			microsecond = 'date.autoformatter.microsecond' # '%M:%S.%f'
			minute = 'date.autoformatter.minute' # '%d %H:%M'
			month = 'date.autoformatter.month' # '%Y-%m'
			second = 'date.autoformatter.second' # '%H:%M:%S'
			year = 'date.autoformatter.year' # '%Y'
	class Docstring:
		hardcopy = 'docstring.hardcopy' # False
	class Errorbar:
		capsize = 'errorbar.capsize' # 0.0
	class Figure:
		autolayout = 'figure.autolayout' # False
		class Constrained_layout:
			h_pad = 'figure.constrained_layout.h_pad' # 0.04167
			hspace = 'figure.constrained_layout.hspace' # 0.02
			use = 'figure.constrained_layout.use' # False
			w_pad = 'figure.constrained_layout.w_pad' # 0.04167
			wspace = 'figure.constrained_layout.wspace' # 0.02
		dpi = 'figure.dpi' # 100.0
		edgecolor = 'figure.edgecolor' # 'white'
		facecolor = 'figure.facecolor' # 'white'
		figsize = 'figure.figsize' # [6.4, 4.8]
		frameon = 'figure.frameon' # True
		max_open_warning = 'figure.max_open_warning' # 20
		class Subplot:
			bottom = 'figure.subplot.bottom' # 0.11
			hspace = 'figure.subplot.hspace' # 0.2
			left = 'figure.subplot.left' # 0.125
			right = 'figure.subplot.right' # 0.9
			top = 'figure.subplot.top' # 0.88
			wspace = 'figure.subplot.wspace' # 0.2
		titlesize = 'figure.titlesize' # 'large'
		titleweight = 'figure.titleweight' # 'normal'
	class Font:
		cursive = 'font.cursive' # ['Apple Chancery', 'Textile', 'Zapf Chancery', 'Sand', 'Script MT', 'Felipa', 'cursive']
		family = 'font.family' # ['sans-serif']
		fantasy = 'font.fantasy' # ['Comic Neue', 'Comic Sans MS', 'Chicago', 'Charcoal', 'Impact', 'Western', 'Humor Sans', 'xkcd', 'fantasy']
		monospace = 'font.monospace' # ['DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Computer Modern Typewriter', 'Andale Mono', 'Nimbus Mono L', 'Courier New', 'Courier', 'Fixed', 'Terminal', 'monospace']
		sans_serif = 'font.sans-serif' # ['DejaVu Sans', 'Bitstream Vera Sans', 'Computer Modern Sans Serif', 'Lucida Grande', 'Verdana', 'Geneva', 'Lucid', 'Arial', 'Helvetica', 'Avant Garde', 'sans-serif']
		serif = 'font.serif' # ['DejaVu Serif', 'Bitstream Vera Serif', 'Computer Modern Roman', 'New Century Schoolbook', 'Century Schoolbook L', 'Utopia', 'ITC Bookman', 'Bookman', 'Nimbus Roman No9 L', 'Times New Roman', 'Times', 'Palatino', 'Charter', 'serif']
		size = 'font.size' # 10.0
		stretch = 'font.stretch' # 'normal'
		style = 'font.style' # 'normal'
		variant = 'font.variant' # 'normal'
		weight = 'font.weight' # 'normal'
	class Grid:
		alpha = 'grid.alpha' # 1.0
		color = 'grid.color' # '#b0b0b0'
		linestyle = 'grid.linestyle' # '-'
		linewidth = 'grid.linewidth' # 0.8
	class Hatch:
		color = 'hatch.color' # 'black'
		linewidth = 'hatch.linewidth' # 1.0
	class Hist:
		bins = 'hist.bins' # 10
	class Image:
		aspect = 'image.aspect' # 'equal'
		cmap = 'image.cmap' # 'viridis'
		composite_image = 'image.composite_image' # True
		interpolation = 'image.interpolation' # 'antialiased'
		lut = 'image.lut' # 256
		origin = 'image.origin' # 'upper'
		resample = 'image.resample' # True
	interactive = 'interactive' # False
	class Keymap:
		all_axes = 'keymap.all_axes' # ['a']
		back = 'keymap.back' # ['left', 'c', 'backspace', 'MouseButton.BACK']
		copy = 'keymap.copy' # ['ctrl+c', 'cmd+c']
		forward = 'keymap.forward' # ['right', 'v', 'MouseButton.FORWARD']
		fullscreen = 'keymap.fullscreen' # ['f', 'ctrl+f']
		grid = 'keymap.grid' # ['g']
		grid_minor = 'keymap.grid_minor' # ['G']
		help = 'keymap.help' # ['f1']
		home = 'keymap.home' # ['h', 'r', 'home']
		pan = 'keymap.pan' # ['p']
		quit = 'keymap.quit' # ['ctrl+w', 'cmd+w', 'q']
		quit_all = 'keymap.quit_all' # ['W', 'cmd+W', 'Q']
		save = 'keymap.save' # ['s', 'ctrl+s']
		xscale = 'keymap.xscale' # ['k', 'L']
		yscale = 'keymap.yscale' # ['l']
		zoom = 'keymap.zoom' # ['o']
	class Legend:
		borderaxespad = 'legend.borderaxespad' # 0.5
		borderpad = 'legend.borderpad' # 0.4
		columnspacing = 'legend.columnspacing' # 2.0
		edgecolor = 'legend.edgecolor' # '0.8'
		facecolor = 'legend.facecolor' # 'inherit'
		fancybox = 'legend.fancybox' # True
		fontsize = 'legend.fontsize' # 'medium'
		framealpha = 'legend.framealpha' # 0.8
		frameon = 'legend.frameon' # True
		handleheight = 'legend.handleheight' # 0.7
		handlelength = 'legend.handlelength' # 2.0
		handletextpad = 'legend.handletextpad' # 0.8
		labelspacing = 'legend.labelspacing' # 0.5
		loc = 'legend.loc' # 'best'
		markerscale = 'legend.markerscale' # 1.0
		numpoints = 'legend.numpoints' # 1
		scatterpoints = 'legend.scatterpoints' # 1
		shadow = 'legend.shadow' # False
		title_fontsize = 'legend.title_fontsize' # None
	class Lines:
		antialiased = 'lines.antialiased' # True
		color = 'lines.color' # 'C0'
		dash_capstyle = 'lines.dash_capstyle' # 'butt'
		dash_joinstyle = 'lines.dash_joinstyle' # 'round'
		dashdot_pattern = 'lines.dashdot_pattern' # [6.4, 1.6, 1.0, 1.6]
		dashed_pattern = 'lines.dashed_pattern' # [3.7, 1.6]
		dotted_pattern = 'lines.dotted_pattern' # [1.0, 1.65]
		linestyle = 'lines.linestyle' # '-'
		linewidth = 'lines.linewidth' # 1.5
		marker = 'lines.marker' # 'None'
		markeredgecolor = 'lines.markeredgecolor' # 'auto'
		markeredgewidth = 'lines.markeredgewidth' # 1.0
		markerfacecolor = 'lines.markerfacecolor' # 'auto'
		markersize = 'lines.markersize' # 6.0
		scale_dashes = 'lines.scale_dashes' # True
		solid_capstyle = 'lines.solid_capstyle' # 'projecting'
		solid_joinstyle = 'lines.solid_joinstyle' # 'round'
	class Markers:
		fillstyle = 'markers.fillstyle' # 'full'
	class Mathtext:
		bf = 'mathtext.bf' # 'sans:bold'
		cal = 'mathtext.cal' # 'cursive'
		default = 'mathtext.default' # 'it'
		fallback_to_cm = 'mathtext.fallback_to_cm' # True
		fontset = 'mathtext.fontset' # 'dejavusans'
		it = 'mathtext.it' # 'sans:italic'
		rm = 'mathtext.rm' # 'sans'
		sf = 'mathtext.sf' # 'sans'
		tt = 'mathtext.tt' # 'monospace'
	class Mpl_toolkits:
		legacy_colorbar = 'mpl_toolkits.legacy_colorbar' # True
	class Patch:
		antialiased = 'patch.antialiased' # True
		edgecolor = 'patch.edgecolor' # 'black'
		facecolor = 'patch.facecolor' # 'C0'
		force_edgecolor = 'patch.force_edgecolor' # False
		linewidth = 'patch.linewidth' # 1.0
	class Path:
		effects = 'path.effects' # []
		simplify = 'path.simplify' # True
		simplify_threshold = 'path.simplify_threshold' # 0.1111111111111111
		sketch = 'path.sketch' # None
		snap = 'path.snap' # True
	class Pdf:
		compression = 'pdf.compression' # 6
		fonttype = 'pdf.fonttype' # 3
		inheritcolor = 'pdf.inheritcolor' # False
		use14corefonts = 'pdf.use14corefonts' # False
	class Pgf:
		preamble = 'pgf.preamble' # ''
		rcfonts = 'pgf.rcfonts' # True
		texsystem = 'pgf.texsystem' # 'xelatex'
	class Polaraxes:
		grid = 'polaraxes.grid' # True
	class Ps:
		class Distiller:
			res = 'ps.distiller.res' # 6000
		fonttype = 'ps.fonttype' # 3
		papersize = 'ps.papersize' # 'letter'
		useafm = 'ps.useafm' # False
		usedistiller = 'ps.usedistiller' # None
	class Savefig:
		bbox = 'savefig.bbox' # None
		directory = 'savefig.directory' # '~'
		dpi = 'savefig.dpi' # 'figure'
		edgecolor = 'savefig.edgecolor' # 'white'
		facecolor = 'savefig.facecolor' # 'white'
		format = 'savefig.format' # 'png'
		frameon = 'savefig.frameon' # True
		jpeg_quality = 'savefig.jpeg_quality' # 95
		orientation = 'savefig.orientation' # 'portrait'
		pad_inches = 'savefig.pad_inches' # 0.1
		transparent = 'savefig.transparent' # False
	class Scatter:
		edgecolors = 'scatter.edgecolors' # 'face'
		marker = 'scatter.marker' # 'o'
	class Svg:
		fonttype = 'svg.fonttype' # 'path'
		hashsalt = 'svg.hashsalt' # None
		image_inline = 'svg.image_inline' # True
	class Text:
		antialiased = 'text.antialiased' # True
		color = 'text.color' # 'black'
		hinting = 'text.hinting' # 'auto'
		hinting_factor = 'text.hinting_factor' # 8
		kerning_factor = 'text.kerning_factor' # 0
		class Latex:
			preamble = 'text.latex.preamble' # ''
			preview = 'text.latex.preview' # False
			unicode = 'text.latex.unicode' # True
		usetex = 'text.usetex' # False
	timezone = 'timezone' # 'UTC'
	class Tk:
		window_focus = 'tk.window_focus' # False
	toolbar = 'toolbar' # 'toolbar2'
	class Verbose:
		fileo = 'verbose.fileo' # 'sys.stdout'
		level = 'verbose.level' # 'silent'
	class Webagg:
		address = 'webagg.address' # '127.0.0.1'
		open_in_browser = 'webagg.open_in_browser' # True
		port = 'webagg.port' # 8988
		port_retries = 'webagg.port_retries' # 50
	class Xtick:
		alignment = 'xtick.alignment' # 'center'
		bottom = 'xtick.bottom' # True
		color = 'xtick.color' # 'black'
		direction = 'xtick.direction' # 'out'
		labelbottom = 'xtick.labelbottom' # True
		labelsize = 'xtick.labelsize' # 'medium'
		labeltop = 'xtick.labeltop' # False
		class Major:
			bottom = 'xtick.major.bottom' # True
			pad = 'xtick.major.pad' # 3.5
			size = 'xtick.major.size' # 3.5
			top = 'xtick.major.top' # True
			width = 'xtick.major.width' # 0.8
		class Minor:
			bottom = 'xtick.minor.bottom' # True
			pad = 'xtick.minor.pad' # 3.4
			size = 'xtick.minor.size' # 2.0
			top = 'xtick.minor.top' # True
			visible = 'xtick.minor.visible' # False
			width = 'xtick.minor.width' # 0.6
		top = 'xtick.top' # False
	class Ytick:
		alignment = 'ytick.alignment' # 'center_baseline'
		color = 'ytick.color' # 'black'
		direction = 'ytick.direction' # 'out'
		labelleft = 'ytick.labelleft' # True
		labelright = 'ytick.labelright' # False
		labelsize = 'ytick.labelsize' # 'medium'
		left = 'ytick.left' # True
		class Major:
			left = 'ytick.major.left' # True
			pad = 'ytick.major.pad' # 3.5
			right = 'ytick.major.right' # True
			size = 'ytick.major.size' # 3.5
			width = 'ytick.major.width' # 0.8
		class Minor:
			left = 'ytick.minor.left' # True
			pad = 'ytick.minor.pad' # 3.4
			right = 'ytick.minor.right' # True
			size = 'ytick.minor.size' # 2.0
			visible = 'ytick.minor.visible' # False
			width = 'ytick.minor.width' # 0.6
		right = 'ytick.right' # False
